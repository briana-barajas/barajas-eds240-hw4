---
title: "HW4 Final"
author: "Briana Barajas"
date: 2024-03-16
format:
  html:
    embed-resources: true
    code-fold: true
---

## Preparation

```{r}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

Load necessary libraries

```{r}
# load libraries ----
library(tidyverse) #data wrangling
library(here)
library(janitor)
library(readxl)

library(ggspatial) # mapping
library(sf)

library(ggridges) # ggplot customizations
library(showtext)
library(ggimage)
library(patchwork)
```

Import fonts from Google

```{r}
# import Google fonts
font_add_google(name = "Noto Sans", family = "noto")
font_add_google(name = "Roboto Slab", family = "roboto")

# enable {showtext} for rendering
showtext_auto()
```

## Read in Data

This project required two datasets, both from the USGS database. The first data set is counts of the Oregon Spotted Frog between

```{r}
# read frog data ----
frogs_raw <- read_csv(here("data", "frog_cmr", "cmrData.csv")) %>% 
  clean_names()

# read water data ----
env_raw <- read_csv(here("data", "frog_cmr", "waterCov.csv"))

# species range data ----
query <- "SELECT * FROM usfws_complete_species_current_range_2 WHERE SCINAME='Rana pretiosa' "

range_map <- st_read(here("data", "usfws_complete_species_current_range",
                          "usfws_complete_species_current_range_2.shp"),
                     query = query) %>% 
  st_make_valid() %>% 
  clean_names()

# full state maps ----
state_map <- st_read(here("data", "cb_2018_us_state_500k", "cb_2018_us_state_500k.shp")) %>% 
  st_make_valid() %>% 
  clean_names() %>% 
  filter(name == "Oregon" | name == "Washington")

# create a coordinate point for data collection area
data_location <- data.frame(lat = c(43.224875), 
                            lon = c(-121.587244)) %>% 
  st_as_sf(coords = c("lon", "lat"), crs = st_crs(state_map))
```

Read in images

```{r}
# frog icons ----
frog_female <- here("data", "frog-female.png")
frog_male <- here("data", "frog-male.png")

# jack creek map ----
creek_img <- png::readPNG(here("data", "jack-creek-inset.png"), native = TRUE)

# sul image ----
sul_img <- png::readPNG(here("data", "sul-measurement.png"), native = TRUE)

# leaf image ----
dry_leaf <- here("data", "dry-leaf.png")
leaf <- here("data", "leaf.png")

# lilypad image ----
yellow_pad <- here("data", "yellow-pad.png")
green_pad <- here("data", "green-pad.png")

# lilypad legend ----
lilypad_legend <- png::readPNG(here("data", "lilypad-legend.png"))
```

## Data Wrangling

The bulk of my data came from a single USGS publication on the Oregon Spotted frog.

```{r}
# wrangle environmental data ----
env <- env_raw %>% 
  filter(reach == "Middle Jack" | reach == "Upper Jamison")

# wrangle frog survey data ----
frogs <- frogs_raw %>% 
  
  # filter to most surveyed reaches
  filter(reach == "Middle Jack" | reach == "Upper Jamison") %>% 
  
  pivot_longer(cols = 5:43,
               names_to = "year_visit",
               values_to = "frog_detected") %>% 
  
  # split year and visit number into two columns %>% 
  separate(year_visit, 
           c("year", "visit"),
           '_') %>% 
  
  # remove x that precedes the year (x2010, x2011, etc)
  mutate(year = str_remove(year, 'x')) %>% 
  
  # rename size to include units
  rename(sul_mm = sul) %>% 
  
  # remove years w/no frog surveys at Upper Jamison
  filter(year %in% c(2009:2019))

# crop spp range ----
# range_map <- st_intersection(range_map, state_map)

rm(env_raw, frogs_raw, query)
```

## Species Range Map

```{r}
# create species range map
ggplot() +
  
  # map states & species range
  geom_sf(data = state_map, col = "slategray") +
  geom_sf(data = range_map, fill = "yellowgreen", col = "black") +
  
  # add box around study area 
  geom_sf(data = data_location, shape = 15, size = 6, col = "dodgerblue",
          alpha = 0.45) +
  
  # add text annotation for study area
  annotate(geom = "text", x = -118, y = 45.4, label = "Study Area \n Jack Creek, Oregon", family = "noto", size = 9, col = "black") +
  
  # expand axis limits so inset image does not get cropped
  coord_sf(xlim = c(-125, -116), ylim = c(41.5, 49.5), expand = FALSE) +
  
  # add lines connecting study area to inset map
  geom_curve(aes(x = -120, xend = -121.50,
                 y = 44.98, yend = 43.224875),
             curvature = 0, col = "black", linewidth = 0.7) +
  
  geom_curve(aes(x = -120, xend = -121.50,
                 y = 43.02, yend = 43.224875),
             curvature = 0, col = "black", linewidth = 0.7) +
  
  # add map of study area
  annotation_raster(creek_img, xmax = -120, xmin = -116,
                    ymax = 45, ymin = 43) +
  
  # update general theme to remove background
  theme_void() +
  
  # add and customize title
  labs(title = "Species Range Map") +
  theme(plot.title = element_text(hjust = 0.5, vjust = -0.5, family = "roboto", size = 46))
```

## Male vs. Female Count

```{r}
# create data subset of male vs. female frogs captured
mf_count <- frogs %>% 
  group_by(sex) %>% 
  summarise(frog_catch = sum(frog_detected))

# add column with male/female frog icon
mf_count$image <- c(frog_female, frog_male)

# change sex to same value so frogs can be on the same line
mf_count$sex <- "A"

# create plot of male vs. female frogs caught
ggplot(data = mf_count) +
  
  # add images of frogs for male and female
  geom_image(aes(x = frog_catch, y = sex, image = image), 
             size = 0.3) +
  
  # add hop line for males
  geom_curve(aes(x = 0, xend = 267, y = 1, yend = 1), linetype = 2,
             curvature = -0.4, col = "#18BA9A", linewidth = 1) +
  
  # add hop line for females
  geom_curve(aes(x = 0, xend = 350, y = 1, yend = 1), linetype = 2,
             curvature = -0.4, col = "#754edb", linewidth = 1) +
  
  # expand x-axis to add space for text
  coord_cartesian(xlim = c(0, 360)) +
  
  # pre-set theme
  theme_minimal() +
  
  # customize labels and title
  labs(title = "Sex of Captured Frogs") +
  
  # add labels for data points
  annotate(geom = "text", x = 345, y = 0.82, label = "350 female frogs", 
           family = "noto", size = 8, col = "#754edb") +
  annotate(geom = "text", x = 258, y = 0.82, label = "267 male frogs",
           family = "noto", size = 8, col = "#18BA9A") +
  
  # remove gridlines
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        
        # remove labels that aren't needed
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        
        # customize fonts
        plot.title = element_text(family = "roboto", size = 46,
                                  hjust = 0, vjust = -5),
        axis.text.y = element_blank(),
        axis.title.x = element_blank())
```

## Annual NDVI

```{r}
# prepare NDVI data for dumbell plot
env_db_data <- env %>% 
  filter(year <= 2019) %>% 
  select(c("year", "mdNDVI", "reach")) %>% 
  pivot_wider(names_from = reach, values_from = mdNDVI) %>% 
  clean_names() %>% 
  mutate(year = as.factor(year),
         leaf = green_pad,
         dry_leaf = yellow_pad)

# create dumbell plot of annual NDVI
ggplot(env_db_data) +
  
  # add line for 0 axis
  geom_hline(yintercept = 0, linetype = 3) +
  
  # add lines to connect NDVI of different sites
  geom_segment(aes(y = middle_jack, yend = upper_jamison,
                   x = year, xend = year), 
               
               linewidth = 0.7, col = "slategray") +
  
  # add points as images
  geom_image(aes(x = year, y = middle_jack,
                 image = leaf), size = 0.08) +
  geom_image(aes(x = year, y = upper_jamison,
                 image = dry_leaf), size = 0.08) +
  
  # change to standard theme
  theme_minimal() +
  
  # update axis names and titles
  labs(y = "NDVI",
       x = "Year",
       title = "Average Summer NDVI") +
  
  # update theme
  # update background and grid color
  theme(panel.background = element_rect(fill = "aliceblue",
                                        color = "lightblue3",
                                        linewidth = 1),
        panel.grid.major = element_line(color = "azure2"),
        panel.grid.minor = element_line(color = "azure2"),
        
        # update fonts and text size
        plot.title = element_text(family = "roboto", size = 46, 
                                  hjust = 0.5),
        axis.title = element_text(family = "noto", size = 26),
        axis.text = element_text(family = "noto", size = 24)) +
  
  # add annotation to provide information for NDVI
  annotate(geom = "text", size = 7, family = "noto",
           label = "Dense vegetation \n Sparse vegetation",
           x = 8, y = 0, col = "blue") +
  
  # add legend 
  annotation_raster(lilypad_legend, xmin = 9, xmax = 11,
                    ymin = 2, ymax = 1.1) +
  
  # increase x-axis length
  coord_cartesian(xlim = c(0,11)) +
  
  # increase spacing between x-axis ticks
  scale_x_discrete(expand = c(0, -11))

```

```{r, eval=FALSE}
# count number of frogs caught per reach
frogs %>% 
  group_by(reach) %>% 
  summarise(total_frogs = sum(frog_detected))
```

## Size Distribution

```{r}
# subset to only include frogs that were captured
frogs_subset <- frogs %>% 
  filter(frog_detected == 1)


# plot density of frog size
ggplot(frogs_subset, aes(x = sul_mm)) +
  geom_density(fill = "#4EA72E", col ="seagreen", alpha = 0.8) +
  
  # change standard theme
  theme_minimal() +
  
  # update axis titles
  labs(y = "Density", 
       x = "Length (mm)",
       title = "Distribution of Frog Length") +
  
  # update text font and size
  theme(axis.title = element_text(family = "noto", size = 26),
        axis.text = element_text(family = "noto", size = 24),
        plot.title = element_text(family = "roboto",
                                  hjust = 0.5, size = 46, vjust = 1),
        
        # increase plot margin
        plot.margin = margin(1,0,0,0, "cm")) +
  
  # update plot to start at y-axis
  scale_y_continuous(expand=c(0, 0))

# add arrow pointing to most common sizes
geom_curve(aes(x = 47.6, xend = 53,
               y = 0.047, yend = 0.045),
           curvature = 0.2, arrow = grid::arrow()) +
  
  # add note on common frog sizes
  annotate(geom = "text", family = "noto", size = 5.5,
           label = "Most captured frogs\n were between 53 - 55 mm \n in length",
           x = 46, y = 0.052) +
  
  # add image for measuring frog lengths
  annotation_raster(sul_img, xmax = 80, xmin = 72,
                    ymax = 0.052, ymin = 0.035)
```
