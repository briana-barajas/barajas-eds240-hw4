---
title: "HW4 Final"
author: "Briana Barajas"
date: 2024-03-16
---

## Preparation

```{r}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
# load libraries ----
library(tidyverse) #data wrangling
library(here)
library(janitor)
library(readxl)

library(ggspatial) # mapping
library(sf)

library(ggridges) # ggplot customizations
library(showtext)
library(ggimage)
```

```{r}
# import Google fonts
font_add_google(name = "Noto Sans", family = "noto")
font_add_google(name = "Roboto Slab", family = "roboto")

# enable {showtext} for rendering
showtext_auto()
```

```{r}
# read in data

# read frog data ----
frogs_raw <- read_csv(here("data", "frog_cmr", "cmrData.csv")) %>% 
  clean_names()

# read water data ----
env_raw <- read_csv(here("data", "frog_cmr", "waterCov.csv"))

# species range data ----
query <- "SELECT * FROM usfws_complete_species_current_range_2 WHERE SCINAME='Rana pretiosa' "

range_map <- st_read(here("data", "usfws_complete_species_current_range",
                          "usfws_complete_species_current_range_2.shp"),
                     query = query) %>% 
  st_make_valid() %>% 
  clean_names()

# full Oregon map ----
state_map <- st_read(here("data", "cb_2018_us_state_500k", "cb_2018_us_state_500k.shp")) %>% 
  st_make_valid() %>% 
  clean_names() %>% 
  filter(name == "Oregon" | name == "Washington")

# frog icon ----
img_path <- here("data", "frog-icon.png")
```

## Data Wrangling

```{r}
# wrangle environmental data ----
env <- env_raw %>% 
  filter(reach == "Middle Jack" | reach == "Upper Jamison")

# wrangle frog survey data ----
frogs <- frogs_raw %>% 
  
  # filter to most surveyed reaches
  filter(reach == "Middle Jack" | reach == "Upper Jamison") %>% 
  
  pivot_longer(cols = 5:43,
               names_to = "year_visit",
               values_to = "frog_detected") %>% 
  
  # split year and visit number into two columns %>% 
  separate(year_visit, 
           c("year", "visit"),
           '_') %>% 
  
  # remove x that precedes the year (x2010, x2011, etc)
  mutate(year = str_remove(year, 'x')) %>% 
  
  # rename size to include units
  rename(sul_mm = sul) %>% 
  
  # remove years w/no frog surveys at Upper Jamison
  filter(year %in% c(2009:2019))

# crop spp range ----
# range_map <- st_intersection(range_map, state_map)

rm(env_raw, frogs_raw, query)
```

## Species Range Map

```{r}
# create a coordinate point for our data
data_location <- data.frame(lat = c(43.224875), 
                     lon = c(-121.587244)) %>% 
  st_as_sf(coords = c("lon", "lat"), crs = st_crs(state_map))

  
# create species range map in oregon
ggplot() +
  geom_sf(data = state_map, col = "slategray") +
  geom_sf(data = range_map, fill = "yellowgreen", col = "black") +
  geom_sf(data = data_location, shape = 0, size = 6, col = "purple1") +
  geom_curve(aes(x = -120, xend = -121.3,
                 y = 44, yend = 43.18),
             curvature = -0.3, col = "purple1", linewidth = 0.7,
             arrow = grid::arrow()) +
  theme_void() +
  labs(title = "Species Range Map - Oregon Spotted Frog") +
  theme(plot.title = element_text(hjust = 0.5))
```

## Male vs. Female Count

```{r}
# NOTE: need to change point to an image, want it to look like a frog jumping
mf_count <- frogs %>% 
  group_by(sex) %>% 
  summarise(frog_catch = sum(frog_detected)) %>% 
  mutate(image = img_path)

# plot
ggplot(data = mf_count) +
  geom_point(aes(x = frog_catch, y = sex), alpha = 0) +
  geom_image(aes(x = frog_catch, y = sex, image = image), size = 0.1) +
  
  # add hop line for males
  geom_curve(aes(x = 0, xend = 267, y = 2, yend = 2), linetype = 2,
             curvature = -0.4) +
  
  # add hop line for females
  geom_curve(aes(x = 0, xend = 350, y = 1, yend = 1), linetype = 2,
             curvature = -0.4) +
  
  # pre-set theme
  theme_minimal() +
  
  # customize labels and title
  labs(x = "Number of Frogs Caught",
       title = "Capture-mark-release Surveys of Oregon Spotted Frog",
       subtitle = "Assessing distribution of sex in surveyed frogs") +
  
  # add labels for data points
  annotate(geom = "text", x = 354, y = 1.14, label = "350", 
           family = "noto", size = 4) +
  annotate(geom = "text", x = 275, y = 2.1, label = "267",
           family = "noto", size = 4) +
  
  # remove gridlines
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        
        # remove labels that aren't needed
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        
        # customize fonts
        plot.title = element_text(family = "roboto", face = "bold", size = 20),
        plot.subtitle = element_text(family = "noto", size = 14, face = "italic"),
        axis.text.y = element_text(family = "noto", size = 12),
        axis.title.x = element_text(family = "noto", size = 12, vjust = 20, hjust = 0.5))


```
